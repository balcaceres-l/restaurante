/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Formularios.admin;

import Clases.empleados;
import Clases.pagos;
import Clases.usuarios;
import clasesDAO.empleados_DAO;
import clasesDAO.pagos_DAO;
import clasesDAO.usuarios_DAO;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


public class pagos_admin extends javax.swing.JInternalFrame {

    DefaultTableModel model1;
    ArrayList<pagos> listaPagos;
    pagos_DAO pagos;
    usuarios_DAO dao;
    usuarios_DAO user;
    
    usuarios usuario;
    public pagos_admin() {
        initComponents();
        model1= (DefaultTableModel) jTable1.getModel();
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {
        private void filterTable() {
            String searchText = jTextField1.getText().trim().toLowerCase();
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model1);
            jTable1.setRowSorter(sorter);

            if (searchText.isEmpty()) {
                sorter.setRowFilter(null);
            } else {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchText));
            }
        }

        @Override
        public void insertUpdate(DocumentEvent e) {
            filterTable();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            filterTable();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            filterTable();
        }
        });
        this.cargar();
    }
    public void cargar(){
        pagos= new pagos_DAO();
        listaPagos= pagos.obtenerTodosLosEmpleados();
        model1.setRowCount(0);
        for (pagos paga : listaPagos) {
            model1.addRow(new Object[]{
            paga.getIdEmpleado(),
            paga.getNombre(),
            paga.getSalarioBase(),
            paga.getHorasExtra(),
            paga.getDescuentos(),
            paga.getSalarioNeto()
        });
        }
    }
    public void poner(){
        try {
            pagos_DAO pagos= new pagos_DAO();
            int filaSeleccionada = jTable1.getSelectedRow();
            int id = (int) jTable1.getValueAt(filaSeleccionada, 0);
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(null, "Seleccione un usuario en la tabla.");
            return;
            }
            String salarioBaseText = jTextField7.getText().trim();
            String horasExtraText = jTextField6.getText().trim();
            if (salarioBaseText.isEmpty() || horasExtraText.isEmpty()) {
                JOptionPane.showMessageDialog(this, 
                "Debe ingresar tanto el salario base como las horas extra", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
                return;
            }

            double nuevoSalarioBase = Double.parseDouble(salarioBaseText);
            double nuevasHorasExtra = Double.parseDouble(horasExtraText);
            if (nuevoSalarioBase <= 0 || nuevasHorasExtra < 0) {
                JOptionPane.showMessageDialog(this, 
                    "El salario base debe ser positivo y las horas extra no pueden ser negativas", 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
               
                return;
            }
            boolean exito=pagos.actualizarSaldoBase(id, nuevoSalarioBase, nuevasHorasExtra); ;
            if (exito){
                JOptionPane.showMessageDialog(this, 
                "Salario base y horas extra actualizados correctamente", 
                "Éxito", 
                JOptionPane.INFORMATION_MESSAGE);
            }
            this.cargar();
        }catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
            "Los valores ingresados no son válidos. Verifique que el salario base y las horas extra sean números", 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, 
            "Error al actualizar los datos: " + e.getMessage(), 
            "Error de base de datos", 
            JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
            "Error inesperado: " + e.getMessage(), 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAsignarPagos = new javax.swing.JButton();
        btnEditarPagos = new javax.swing.JButton();
        btnEliminarPago = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();

        setBorder(null);

        main.setBackground(new java.awt.Color(255, 255, 255));
        main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(102, 153, 255));

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel2.setText("PAGOS");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(329, 329, 329)
                .addComponent(jLabel2)
                .addContainerGap(443, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(46, 46, 46))
        );

        main.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id Empleado", "Nombre", "Salario Base", "Horas Extra", "Descuentos", "Salario Neto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        main.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 840, 180));

        btnAsignarPagos.setBackground(new java.awt.Color(0, 102, 153));
        btnAsignarPagos.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnAsignarPagos.setForeground(new java.awt.Color(255, 255, 255));
        btnAsignarPagos.setText("Asignar Pago");
        btnAsignarPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarPagosActionPerformed(evt);
            }
        });
        main.add(btnAsignarPagos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 550, -1, 30));

        btnEditarPagos.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnEditarPagos.setText("Editar Pago");
        btnEditarPagos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));
        btnEditarPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarPagosActionPerformed(evt);
            }
        });
        main.add(btnEditarPagos, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 560, 90, 30));

        btnEliminarPago.setBackground(new java.awt.Color(0, 102, 153));
        btnEliminarPago.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnEliminarPago.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarPago.setText("Eliminar Pago");
        main.add(btnEliminarPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 560, -1, 30));

        jTextField1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1.setText("Buscar");
        main.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 760, 30));

        jButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton1.setText("REGRESAR");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        main.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 550, 130, 40));

        jLabel1.setText("Cantidad de horas extra");
        main.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 140, -1));

        jLabel3.setText("Id Empleado");
        main.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 70, -1));

        jLabel4.setText("Nombre");
        main.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 70, -1));

        jLabel5.setText("Salario Neto");
        main.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 120, -1));

        jLabel6.setText("Salario Base");
        main.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 70, -1));

        jLabel7.setText("Descuentos");
        main.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 70, -1));

        jTextField2.setEditable(false);
        main.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 90, -1));

        jTextField3.setEditable(false);
        main.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 90, -1));

        jTextField4.setEditable(false);
        main.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 90, -1));

        jTextField5.setEditable(false);
        main.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 230, 90, -1));
        main.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 170, 110, -1));
        main.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 110, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAsignarPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarPagosActionPerformed
        this.poner();
    }//GEN-LAST:event_btnAsignarPagosActionPerformed
    private void mostrarDatosEmpleado() {
    // Obtener el índice de la fila seleccionada
    int filaSeleccionada = jTable1.getSelectedRow();
    
    // Verificar si hay una fila seleccionada
    if (filaSeleccionada == -1) {
        // No hay fila seleccionada, se pueden limpiar los campos o mostrar un mensaje
        limpiarCampos();
        return;
    }
    
    try {
        // Obtener los valores de la fila seleccionada con conversión segura
        Object idObj = jTable1.getValueAt(filaSeleccionada, 0);
        Object nombreObj = jTable1.getValueAt(filaSeleccionada, 1);
        Object salarioBaseObj = jTable1.getValueAt(filaSeleccionada, 2);
        Object horasExtraObj = jTable1.getValueAt(filaSeleccionada, 3);
        Object descuentosObj = jTable1.getValueAt(filaSeleccionada, 4);
        Object salarioNetoObj = jTable1.getValueAt(filaSeleccionada, 5);
        
        // Convertir valores a String de manera segura
        String idEmpleado = idObj != null ? idObj.toString() : "";
        String nombre = nombreObj != null ? nombreObj.toString() : "";
        
        // Convertir números correctamente y formatear con dos decimales cuando sea necesario
        double salarioBase = convertirADouble(salarioBaseObj);
        double horasExtra = convertirADouble(horasExtraObj);
        double descuentos = convertirADouble(descuentosObj);
        double salarioNeto = convertirADouble(salarioNetoObj);
        
        // Mostrar los valores en los campos de texto correspondientes
        jTextField3.setText(idEmpleado);
        jTextField4.setText(nombre);
        jTextField7.setText(String.format("%.2f", salarioBase));
        jTextField6.setText(String.format("%.2f", horasExtra));
        jTextField2.setText(String.format("%.2f", descuentos));
        jTextField5.setText(String.format("%.2f", salarioNeto));
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, 
            "Error al cargar los datos: " + e.getMessage(), 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
        e.printStackTrace(); // Para debugging
    }
}

/**
 * Método auxiliar para convertir un objeto a double de manera segura
 * Maneja diferentes tipos de datos (Integer, Double, String, etc.)
 */
private double convertirADouble(Object obj) {
    if (obj == null) {
        return 0.0;
    }
    
    if (obj instanceof Double) {
        return (Double) obj;
    } else if (obj instanceof Integer) {
        return ((Integer) obj).doubleValue();
    } else if (obj instanceof Float) {
        return ((Float) obj).doubleValue();
    } else if (obj instanceof Long) {
        return ((Long) obj).doubleValue();
    } else {
        try {
            return Double.parseDouble(obj.toString());
        } catch (NumberFormatException e) {
            return 0.0; // Valor por defecto si no se puede convertir
        }
    }
}

/**
 * Método auxiliar para limpiar todos los campos de texto
 */
private void limpiarCampos() {
    jTextField2.setText("");
    jTextField3.setText("");
    jTextField4.setText("");
    jTextField5.setText("");
    jTextField6.setText("");
    jTextField7.setText("");
}
    private void btnEditarPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarPagosActionPerformed
        this.mostrarDatosEmpleado();
    }//GEN-LAST:event_btnEditarPagosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignarPagos;
    private javax.swing.JButton btnEditarPagos;
    private javax.swing.JButton btnEliminarPago;
    private javax.swing.JPanel header;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JPanel main;
    // End of variables declaration//GEN-END:variables
}
