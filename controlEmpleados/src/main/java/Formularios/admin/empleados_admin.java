/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Formularios.admin;

import Clases.empleados;
import Clases.usuarios;
import clasesDAO.empleados_DAO;
import clasesDAO.usuarios_DAO;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


public class empleados_admin extends javax.swing.JInternalFrame {

    ArrayList<empleados> listaEmpleados;
    empleados_DAO empleados;
    DefaultTableModel model1;
    usuarios_DAO user;
    usuarios usuario;
    public empleados_admin() {
        initComponents();
        model1 = (DefaultTableModel) jTable1.getModel();
        this.cargar();
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {
        private void filterTable() {
            String searchText = jTextField1.getText().trim().toLowerCase();
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model1);
            jTable1.setRowSorter(sorter);

            if (searchText.isEmpty()) {
                sorter.setRowFilter(null);
            } else {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchText));
            }
        }

        @Override
        public void insertUpdate(DocumentEvent e) {
            filterTable();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            filterTable();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            filterTable();
        }
    });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void cargar(){
        empleados= new empleados_DAO();
        listaEmpleados= empleados.obtenerTodosLosEmpleados();
        model1.setRowCount(0);
        for (empleados empleados : listaEmpleados) {
            model1.addRow(new Object[]{
            empleados.getIdUsuario(),
            empleados.getNombre(),
            empleados.getRol(),
            empleados.getFechaContratacion()
        });
        }
    }
    public void poner(){
        try{
            
            user= new usuarios_DAO();
            int filaSeleccionada = jTable1.getSelectedRow();
            int id = (int) jTable1.getValueAt(filaSeleccionada, 0);
            if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un usuario en la tabla.");
            return;
        }
            usuario= user.obtenerUsuarioPorId(id);
            jTextField2.setText(String.valueOf(id));
            if (usuario != null) {
                jTextField3.setText(usuario.getNombre());
                jComboBox1.setSelectedItem(usuario.getRol());
                jTextField4.setText(usuario.getInicio() != null ? usuario.getInicio().toString() : "");
            } else {
                System.out.println("No se encontró el usuario con ID: " + id);
            }
        } catch (NumberFormatException e) {
            System.out.println("Error: El ID de usuario no es un número válido.");
        }

    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        btnAggEmpleado = new javax.swing.JButton();
        btnVerSalario = new javax.swing.JButton();
        btnEliminarEmpleado = new javax.swing.JButton();
        btnEditarEmpleado = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();

        setBorder(null);

        main.setBackground(new java.awt.Color(255, 255, 255));
        main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(102, 153, 255));

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel2.setText("EMPLEADOS");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(297, 297, 297)
                .addComponent(jLabel2)
                .addContainerGap(350, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        main.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Nombre", "Rol", "Fecha de Contratación"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        main.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 750, 190));

        jTextField1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1.setText("Buscar empleado");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        main.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 760, 30));

        btnAggEmpleado.setBackground(new java.awt.Color(0, 102, 153));
        btnAggEmpleado.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnAggEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        btnAggEmpleado.setText("Guardar");
        btnAggEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAggEmpleadoActionPerformed(evt);
            }
        });
        main.add(btnAggEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, -1, 30));

        btnVerSalario.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnVerSalario.setText("Ver Salario");
        btnVerSalario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));
        main.add(btnVerSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 540, 90, 30));

        btnEliminarEmpleado.setBackground(new java.awt.Color(0, 102, 153));
        btnEliminarEmpleado.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnEliminarEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarEmpleado.setText("Eliminar");
        btnEliminarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEmpleadoActionPerformed(evt);
            }
        });
        main.add(btnEliminarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 540, -1, 30));

        btnEditarEmpleado.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnEditarEmpleado.setText("Editar");
        btnEditarEmpleado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));
        btnEditarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarEmpleadoActionPerformed(evt);
            }
        });
        main.add(btnEditarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 540, 90, 30));

        jButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton1.setText("REGRESAR");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        main.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 540, 130, 40));

        jTextField2.setEditable(false);
        main.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 90, -1));

        jLabel1.setText("Id");
        main.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel3.setText("Nombre");
        main.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));
        main.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 130, -1));

        jLabel4.setText("Rol");
        main.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Supervisor", "Usuario normal" }));
        main.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, -1, -1));

        jLabel5.setText("Fecha de Contratación");
        main.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 130, -1));

        jTextField4.setEditable(false);
        main.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 190, 140, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnEliminarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEmpleadoActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
        int id = (int) jTable1.getValueAt(filaSeleccionada, 0);
        empleados= new empleados_DAO();
        boolean eliminado = empleados.eliminarEmpleado(id);
        if(!eliminado){
            JOptionPane.showMessageDialog(null, "Empleado eliminado exitosamente.");
        }else{
            JOptionPane.showMessageDialog(null, "Error al eliminar el empleado");
        }
        this.cargar();
    }//GEN-LAST:event_btnEliminarEmpleadoActionPerformed

    private void btnEditarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEmpleadoActionPerformed
        this.poner();
    }//GEN-LAST:event_btnEditarEmpleadoActionPerformed

    private void btnAggEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAggEmpleadoActionPerformed
        this.editarEmpleadoDesdeUI();
        this.cargar();
    }//GEN-LAST:event_btnAggEmpleadoActionPerformed

    public void editarEmpleadoDesdeUI() {
        try {
            int idUsuario = Integer.parseInt(jTextField2.getText());
            String nuevoNombre = jTextField3.getText();
            String nuevaFechaStr = jTextField4.getText();

            // Validar que los campos no estén vacíos
            if (nuevoNombre.isEmpty() || nuevaFechaStr.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios.");
                return;
            }
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            Date fechaUtil = formato.parse(nuevaFechaStr);
            java.sql.Date fechaContratacion = new java.sql.Date(fechaUtil.getTime());
            String nuevoRol;
            switch (jComboBox1.getSelectedIndex()) {
                case 0:
                    nuevoRol = "Administrador"; // ID en la BD: 1
                    break;
                case 1:
                    nuevoRol = "Supervisor"; // ID en la BD: 5
                    break;
                case 2:
                    nuevoRol = "Usuario normal"; // ID en la BD: 6
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Rol no válido.");
                    return;
            }
            empleados empleado = new empleados(idUsuario, nuevoNombre, nuevoRol, fechaContratacion);
            empleados_DAO dao = new empleados_DAO();
            boolean actualizado = dao.editarEmpleado(empleado);
            if (!actualizado) {
                JOptionPane.showMessageDialog(null, "Empleado actualizado correctamente.");
            } else {
                JOptionPane.showMessageDialog(null, "Error al actualizar el empleado.");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error: El ID de usuario debe ser un número válido.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: La fecha debe tener el formato yyyy-MM-dd.");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAggEmpleado;
    private javax.swing.JButton btnEditarEmpleado;
    private javax.swing.JButton btnEliminarEmpleado;
    private javax.swing.JButton btnVerSalario;
    private javax.swing.JPanel header;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JPanel main;
    // End of variables declaration//GEN-END:variables
}
