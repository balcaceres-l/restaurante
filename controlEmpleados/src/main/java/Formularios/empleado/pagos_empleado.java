/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Formularios.empleado;

import Clases.empleados;
import Clases.pagos;
import clasesDAO.empleados_DAO;
import clasesDAO.pagos_DAO;
import clasesDAO.usuarios_DAO;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author david
 */
public class pagos_empleado extends javax.swing.JInternalFrame {
    DefaultTableModel model1;
    int id;
    pagos_DAO pago;
    usuarios_DAO dao;
    ArrayList<pagos> listaPagos;
    ArrayList<empleados> listaEmpleados;
    DefaultTableModel model2;
    public pagos_empleado() {
        initComponents();
        model1 = (DefaultTableModel) jTable1.getModel();
        model2= (DefaultTableModel) jTable2.getModel();
        this.cargar();
    }
    public pagos_empleado(int id){
        initComponents();
        this.id=id;
        model2= (DefaultTableModel) jTable2.getModel();
        model1 = (DefaultTableModel) jTable1.getModel();
        this.cargar();
    }
    public void cargar(){
        model1.setRowCount(0);
        dao = new usuarios_DAO();
        Integer idEmpleado = dao.obtenerIdEmpleadoPorUsuario(id);
        usuarios_DAO usuario= new usuarios_DAO();
        Integer idPuesto= usuario.ObtenerIdArea(idEmpleado);
        System.out.print("El id del area es " + idPuesto);
        if (idEmpleado != null) {
            System.out.println("El ID del empleado es: " + idEmpleado);
        } else {
            System.out.println("No se encontró un empleado para el usuario con ID " + id + " o si " + idEmpleado);
        }
        empleados_DAO empleadosDAO = new empleados_DAO();
        listaEmpleados = empleadosDAO.ObtenerDatos(id, idEmpleado);
        for (empleados empleado : listaEmpleados) {
            model1.addRow(new Object[]{
                empleado.getNombre(),
                empleado.getPuesto(),
                empleado.getSalarioNeto()
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setBorder(null);

        main.setBackground(new java.awt.Color(255, 255, 255));
        main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(102, 153, 255));

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel2.setText("PAGOS");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(jLabel2)
                .addContainerGap(400, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(34, 34, 34))
        );

        main.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        jButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jButton1.setText("REGRESAR");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        main.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 490, 130, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Puesto", "Salario Neto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        main.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 670, 120));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Salario Base", "Cantidad de horas extra", "Ingresos por horas extra", "Total descuentos", "Salario Neto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        main.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 780, 140));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      dao = new usuarios_DAO();
        model2.setRowCount(0);
        Integer idEmpleado = dao.obtenerIdEmpleadoPorUsuario(id);
        System.out.println("ID del empleado obtenido: " + idEmpleado);

        if (idEmpleado != null) {
            pago = new pagos_DAO();
            listaPagos = pago.salarioEmpleados(idEmpleado);
            System.out.println("Tamaño de listaPagos: " + listaPagos.size());

            if (!listaPagos.isEmpty()) {
                for (pagos pago : listaPagos) {
                    System.out.println("Salario Base: " + pago.getSalarioBase());
                    System.out.println("Salario Neto: " + pago.getSalarioNeto());
                    model2.addRow(new Object[]{
                        pago.getSalarioBase(),
                        pago.getHorasExtra(),
                        pago.getIngresoExtra(),
                        pago.getDescuentos(),
                        pago.getSalarioNeto()
                    });
                }
            } else {
                System.out.println("No se encontraron pagos para el empleado con ID: " + idEmpleado);
            }
        } else {
            System.out.println("No se pudo obtener el ID del empleado.");
        }
    }//GEN-LAST:event_jTable1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel header;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel main;
    // End of variables declaration//GEN-END:variables
}